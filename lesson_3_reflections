###When would you want to use a remote repository rather than keeping all your work local?
When collaborating on a project with oters and when using different computers in working on the files in the repository.

###Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
You may not be ready to make your commits public.

###Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are essentially clones of other people's repositories and are used when you don't have permission to change the other person's repository directly. Clones copy the contents of a
repository and can be used both locally in copying a repo from one location to another on your computer and remotely in copying a repo from GitHub. Branches are continuations of a repo
that already exists and are not for copying purposes.

###What is the benefit of having a copy of the last known state of the remote stored locally?
It allows you to identify any conflicts between the different copies and merge them with full control of the output.

###How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Save files locally and maintain my own local history going back to a certain point. When I'm ready to save a new version of a file, I then replace the one in the group's shared folder.
This workflow is easy to execute and navigate, but it requires using potentially lots of memory due to keeping so many old files. This also doesn't allow for an easy way to collaborate
with others if multiple people are working on the file in their local machines simultaneously.

###When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
when you are collaboarting and want to have others review your work and make sure they are aware of the changes you are making to the files all of you are collaborating on.